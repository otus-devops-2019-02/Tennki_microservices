stages:
  - build
  - test
  - review
  - stage
  - production

variables:
  DATABASE_URL: 'mongodb://mongo/user_posts'

build_job:
  image: docker:stable
  stage: build  
  script:
  - docker info
  - docker build -t $REGISTRY_USER/reddit ./reddit

#docker push:
#  stage: push
#  only:
#  - master
#  script:
#  - echo "$REGISTRY_PASSWORD" | docker login -u "$REGISTRY_USER" --password-stdin
#  - docker push $REGISTRY_USER/reddit

test_unit_job:
  image: ruby:2.4.2
  stage: test
  services:
    - mongo:latest  
  script:
    - cd reddit
    - bundle install
    - ruby simpletest.rb

test_integration_job:
  stage: test
  script:
    - echo 'Testing 2'

branch review:
  image: ansible
  stage: review
  script: 
    - echo "Deploy to $CI_ENVIRONMENT_SLUG"
    - cd ansible
    - pip install -r requirements.txt
    - echo $ANSIBLE_VAULT_KEY > ~/.ansible/vault.key
    - ansible-vault decrypt deploy.enc service_account.json.enc
    - mv service_account.json.enc service_account.json
    - mv deploy.enc ~/.ssh/deploy
    - chmod 0600 ~/.ssh/deploy    
    - ansible -e CI_ENVIRONMENT_SLUG=$CI_ENVIRONMENT_SLUG playbook/site.yml
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.tennki.tk
  only:
    - branches
  except:
    - master

stop_review:
  image: ansible
  stage: review
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Remove $CI_ENVIRONMENT_SLUG environment"
    - cd ansible
    - pip install -r requirements.txt
    - echo $ANSIBLE_VAULT_KEY > ~/.ansible/vault.key
    - ansible-vault decrypt service_account.json.enc
    - mv service_account.json.enc service_account.json
    - ansible -e CI_ENVIRONMENT_SLUG=$CI_ENVIRONMENT_SLUG playbook/destroy.yml
  when: manual
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    action: stop

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: stage
    url: http://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: production
    url: http://example.com
