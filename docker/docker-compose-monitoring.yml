version: '3.3'

services:
  prometheus:
    image: ${USER_NAME}/prometheus
    ports:
      - '9090:9090'
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=1d'
    extra_hosts:
      - "dockerhost:${DOCKERHOST}"
    networks:
      - frontend
      - backend

  node-exporter:
    image: prom/node-exporter:v0.15.2
    user: root
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    networks:
      - backend

  mongodb-exporter:
    image: ${USER_NAME}/mongodb-exporter
    command:
      - '--mongodb.uri=mongodb://post_db:27017'
    networks:
      - backend
  
  cloudprober:
    image: ${USER_NAME}/cloudprober
    networks:
      - frontend
  
  cadvisor:
    image: google/cadvisor:v0.29.0
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    ports:
      - '8080:8080'
    networks:
      - frontend

  grafana:
    image: grafana/grafana:5.0.0
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - frontend
      - backend

  grafana_autoprovision:
    image: tenki/grafana    
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    depends_on:
      - prometheus
    ports:
      - 3001:3000
    networks:
      - frontend
      - backend

  alertmanager:
    image: ${USER_NAME}/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
    ports:
      - 9093:9093
    networks:
      - frontend

  influxdb:
    image: influxdb:1.7-alpine
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - backend

  telegraf:
    image: tenki/telegraf
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    networks:
      - backend
  
  mail:
    image: gessnerfl/fake-smtp-server:1.2.0
    ports:
        - "5025:5025"
        - "5080:5080"
        - "5081:5081"
    networks:
      - frontend

  stackdriver-exporter:
    image: frodenas/stackdriver-exporter:v0.6.0
    ports:
    - "9255:9255"
    command: --google.project-id docker-239809 --monitoring.metrics-type-prefixes "compute.googleapis.com/instance/cpu,compute.googleapis.com/instance/disk"
    volumes:
      - /tmp/service_account.json:/tmp/service_account.json
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/service_account.json
    networks:
      - frontend
  
  trickster:
    image: tricksterio/trickster:1.0.6
    ports:
    - "9089:9090"
    command: -origin http://prometheus:9090
    networks:
      - frontend
  
  autoheal:
    image: tenki/autoheal
    ports:
    - "9099:9099"
    command: server --config-file=/etc/autoheal.yml
    networks:
      - frontend    

volumes:
  prometheus_data:
  grafana_data:
  influxdb_data:


networks:
  backend:
  frontend:
